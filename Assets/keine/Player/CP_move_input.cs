//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/keine/Player/CP_move_input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CP_move_input : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CP_move_input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CP_move_input"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""61582a57-1776-4dad-a3d0-e6aaf04bce9c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e4263241-80bd-47b0-95ef-830803f2e14b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Kitune"",
                    ""type"": ""Button"",
                    ""id"": ""e00935ac-ef2e-462b-a30b-cc9542d96bf0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cyuusi"",
                    ""type"": ""Button"",
                    ""id"": ""63c88bd0-5d31-4d25-9e35-3190872ff8ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pose"",
                    ""type"": ""Button"",
                    ""id"": ""b8a066a3-ec21-4cce-8816-9aacb49654cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HintSwitch"",
                    ""type"": ""Value"",
                    ""id"": ""0f3bca62-7d35-49fd-be53-e147c839309f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HintClose"",
                    ""type"": ""Button"",
                    ""id"": ""c3c3aaf3-4142-458e-8f28-671a62c76604"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""stick"",
                    ""id"": ""6183bdaf-6880-4be5-ab63-6c132673cd6d"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fc27719e-32e6-4ffc-abf4-2c2729715afa"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f05ee5f8-c84e-46b6-80ba-06b049bebe5c"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""76b6f732-80d2-4f99-a860-9669f6598d88"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f2d350e-dd60-4cc7-9790-d4d404000668"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""wasd"",
                    ""id"": ""4b141fc0-f303-490d-a88c-ba13a5cae5a7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6aeb4864-7776-4d19-8986-859f3043395a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d7b98f4f-0aac-43dc-9024-810846135f9d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ae11d316-aee6-4307-8c61-72024f049a1e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""672893e7-e786-4dbc-8bef-edf5dd4f60e4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""df11f94b-3c85-4470-9be1-7eec9ba63c4b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kitune"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abf85242-5f45-4ccb-811e-0f1e70d53b93"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kitune"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45e55f09-cbae-4c33-b679-298ad980ad0a"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cyuusi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0151acd1-de9b-4ab6-891c-4d5e1ca5cc9a"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cyuusi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4255d2cb-d55a-4c11-9f1b-6c681cfbf016"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17b9f645-8bd2-4096-ad11-24cd77f41412"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""40572afb-44e8-4394-93ef-c96e53bb0ed5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintSwitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4af5d79e-6de2-4986-8a0d-354679ab1836"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7ce4a8f6-f967-4844-b638-5b0e9b3b9786"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""54413cf7-b81d-4edf-ae6b-c5ffd6a69857"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintSwitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""090c8de2-6197-427f-a2c3-6e5d1702368c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7090a5b5-9454-473b-ae4f-047458925f4d"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""83276089-8cfe-4cf3-90ac-98801663032b"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HintClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""2f65e29a-9ab3-4d4c-b5b2-2cf16f59181d"",
            ""actions"": [
                {
                    ""name"": ""Fade"",
                    ""type"": ""Button"",
                    ""id"": ""74f3ba0f-2782-4cca-8780-60d5e6955374"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""1aa55008-8a5b-4831-b46f-c36467acda8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dicision"",
                    ""type"": ""Button"",
                    ""id"": ""c3d23ca1-f51f-4db8-8c21-534b57d91375"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Switching"",
                    ""type"": ""Value"",
                    ""id"": ""e8679d21-853d-4a70-b382-fc8efae106a1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""82066831-b707-4375-a7a6-7731cb41c757"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyKokkurisan"",
                    ""type"": ""Button"",
                    ""id"": ""75f16f8e-9244-4cc1-ab6d-b39b1814745b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonKokkurisan"",
                    ""type"": ""Button"",
                    ""id"": ""1997e27b-0467-439a-98f0-2621a62ec0ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d7397496-440a-4c27-acab-74a0b673a85d"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c6585b1-2977-4711-9535-a615743d97e4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""642dde08-aedc-4701-8dce-055a156a69d0"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1893c48-5948-4080-ba84-aa58edc54ade"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d5bdf29d-d12b-459f-b215-27a63f3c0571"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3a8da7db-7d89-4854-b3f4-665fdd8249ba"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aa209aef-d92d-4861-9970-e5f9bea1cc8d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f0f54a66-2da1-4155-87d0-7eb7d42a2f19"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2d6fb324-50bb-49db-ad72-6bb5c2f72f81"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4b6bba66-e92a-42f0-9767-545718aadac8"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dicision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed3539e2-5c35-4548-a579-a0d6adb0bcab"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dicision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78507758-3377-42e6-86e4-b068dbfec137"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switching"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6974a72-7103-428b-a656-b756342f4f2f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switching"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8833c82b-0884-44b8-852d-533d9d67b4d4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1c4ae34-4dfd-4f48-8b91-91b393f2e8d6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d8fa743-e863-4ee8-852c-69fc42a61d32"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyKokkurisan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4fe8add-e87b-4b24-9cc4-b836980ecc3c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyKokkurisan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e13cb549-69e1-4fc5-825e-dc1da272b9e3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonKokkurisan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Tutorial"",
            ""id"": ""16c60c4c-9053-4c62-9de9-0207a621208c"",
            ""actions"": [
                {
                    ""name"": ""Dicision"",
                    ""type"": ""Value"",
                    ""id"": ""0df61ccb-0093-4eae-9aa1-f1bb2f96176b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""df81f4df-a2fd-41bf-97b8-6289f685df2e"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dicision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff6c6d3d-f5e5-4363-ae8a-adfacdf0014e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dicision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Kitune = m_Player.FindAction("Kitune", throwIfNotFound: true);
        m_Player_Cyuusi = m_Player.FindAction("Cyuusi", throwIfNotFound: true);
        m_Player_Pose = m_Player.FindAction("Pose", throwIfNotFound: true);
        m_Player_HintSwitch = m_Player.FindAction("HintSwitch", throwIfNotFound: true);
        m_Player_HintClose = m_Player.FindAction("HintClose", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Fade = m_UI.FindAction("Fade", throwIfNotFound: true);
        m_UI_Select = m_UI.FindAction("Select", throwIfNotFound: true);
        m_UI_Dicision = m_UI.FindAction("Dicision", throwIfNotFound: true);
        m_UI_Switching = m_UI.FindAction("Switching", throwIfNotFound: true);
        m_UI_Back = m_UI.FindAction("Back", throwIfNotFound: true);
        m_UI_KeyKokkurisan = m_UI.FindAction("KeyKokkurisan", throwIfNotFound: true);
        m_UI_ButtonKokkurisan = m_UI.FindAction("ButtonKokkurisan", throwIfNotFound: true);
        // Tutorial
        m_Tutorial = asset.FindActionMap("Tutorial", throwIfNotFound: true);
        m_Tutorial_Dicision = m_Tutorial.FindAction("Dicision", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Kitune;
    private readonly InputAction m_Player_Cyuusi;
    private readonly InputAction m_Player_Pose;
    private readonly InputAction m_Player_HintSwitch;
    private readonly InputAction m_Player_HintClose;
    public struct PlayerActions
    {
        private @CP_move_input m_Wrapper;
        public PlayerActions(@CP_move_input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Kitune => m_Wrapper.m_Player_Kitune;
        public InputAction @Cyuusi => m_Wrapper.m_Player_Cyuusi;
        public InputAction @Pose => m_Wrapper.m_Player_Pose;
        public InputAction @HintSwitch => m_Wrapper.m_Player_HintSwitch;
        public InputAction @HintClose => m_Wrapper.m_Player_HintClose;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Kitune.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKitune;
                @Kitune.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKitune;
                @Kitune.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKitune;
                @Cyuusi.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCyuusi;
                @Cyuusi.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCyuusi;
                @Cyuusi.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCyuusi;
                @Pose.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPose;
                @Pose.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPose;
                @Pose.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPose;
                @HintSwitch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHintSwitch;
                @HintSwitch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHintSwitch;
                @HintSwitch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHintSwitch;
                @HintClose.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHintClose;
                @HintClose.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHintClose;
                @HintClose.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHintClose;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Kitune.started += instance.OnKitune;
                @Kitune.performed += instance.OnKitune;
                @Kitune.canceled += instance.OnKitune;
                @Cyuusi.started += instance.OnCyuusi;
                @Cyuusi.performed += instance.OnCyuusi;
                @Cyuusi.canceled += instance.OnCyuusi;
                @Pose.started += instance.OnPose;
                @Pose.performed += instance.OnPose;
                @Pose.canceled += instance.OnPose;
                @HintSwitch.started += instance.OnHintSwitch;
                @HintSwitch.performed += instance.OnHintSwitch;
                @HintSwitch.canceled += instance.OnHintSwitch;
                @HintClose.started += instance.OnHintClose;
                @HintClose.performed += instance.OnHintClose;
                @HintClose.canceled += instance.OnHintClose;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Fade;
    private readonly InputAction m_UI_Select;
    private readonly InputAction m_UI_Dicision;
    private readonly InputAction m_UI_Switching;
    private readonly InputAction m_UI_Back;
    private readonly InputAction m_UI_KeyKokkurisan;
    private readonly InputAction m_UI_ButtonKokkurisan;
    public struct UIActions
    {
        private @CP_move_input m_Wrapper;
        public UIActions(@CP_move_input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fade => m_Wrapper.m_UI_Fade;
        public InputAction @Select => m_Wrapper.m_UI_Select;
        public InputAction @Dicision => m_Wrapper.m_UI_Dicision;
        public InputAction @Switching => m_Wrapper.m_UI_Switching;
        public InputAction @Back => m_Wrapper.m_UI_Back;
        public InputAction @KeyKokkurisan => m_Wrapper.m_UI_KeyKokkurisan;
        public InputAction @ButtonKokkurisan => m_Wrapper.m_UI_ButtonKokkurisan;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Fade.started -= m_Wrapper.m_UIActionsCallbackInterface.OnFade;
                @Fade.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnFade;
                @Fade.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnFade;
                @Select.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSelect;
                @Dicision.started -= m_Wrapper.m_UIActionsCallbackInterface.OnDicision;
                @Dicision.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnDicision;
                @Dicision.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnDicision;
                @Switching.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSwitching;
                @Switching.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSwitching;
                @Switching.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSwitching;
                @Back.started -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @KeyKokkurisan.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKeyKokkurisan;
                @KeyKokkurisan.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKeyKokkurisan;
                @KeyKokkurisan.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKeyKokkurisan;
                @ButtonKokkurisan.started -= m_Wrapper.m_UIActionsCallbackInterface.OnButtonKokkurisan;
                @ButtonKokkurisan.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnButtonKokkurisan;
                @ButtonKokkurisan.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnButtonKokkurisan;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Fade.started += instance.OnFade;
                @Fade.performed += instance.OnFade;
                @Fade.canceled += instance.OnFade;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Dicision.started += instance.OnDicision;
                @Dicision.performed += instance.OnDicision;
                @Dicision.canceled += instance.OnDicision;
                @Switching.started += instance.OnSwitching;
                @Switching.performed += instance.OnSwitching;
                @Switching.canceled += instance.OnSwitching;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @KeyKokkurisan.started += instance.OnKeyKokkurisan;
                @KeyKokkurisan.performed += instance.OnKeyKokkurisan;
                @KeyKokkurisan.canceled += instance.OnKeyKokkurisan;
                @ButtonKokkurisan.started += instance.OnButtonKokkurisan;
                @ButtonKokkurisan.performed += instance.OnButtonKokkurisan;
                @ButtonKokkurisan.canceled += instance.OnButtonKokkurisan;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Tutorial
    private readonly InputActionMap m_Tutorial;
    private ITutorialActions m_TutorialActionsCallbackInterface;
    private readonly InputAction m_Tutorial_Dicision;
    public struct TutorialActions
    {
        private @CP_move_input m_Wrapper;
        public TutorialActions(@CP_move_input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dicision => m_Wrapper.m_Tutorial_Dicision;
        public InputActionMap Get() { return m_Wrapper.m_Tutorial; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TutorialActions set) { return set.Get(); }
        public void SetCallbacks(ITutorialActions instance)
        {
            if (m_Wrapper.m_TutorialActionsCallbackInterface != null)
            {
                @Dicision.started -= m_Wrapper.m_TutorialActionsCallbackInterface.OnDicision;
                @Dicision.performed -= m_Wrapper.m_TutorialActionsCallbackInterface.OnDicision;
                @Dicision.canceled -= m_Wrapper.m_TutorialActionsCallbackInterface.OnDicision;
            }
            m_Wrapper.m_TutorialActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Dicision.started += instance.OnDicision;
                @Dicision.performed += instance.OnDicision;
                @Dicision.canceled += instance.OnDicision;
            }
        }
    }
    public TutorialActions @Tutorial => new TutorialActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnKitune(InputAction.CallbackContext context);
        void OnCyuusi(InputAction.CallbackContext context);
        void OnPose(InputAction.CallbackContext context);
        void OnHintSwitch(InputAction.CallbackContext context);
        void OnHintClose(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnFade(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnDicision(InputAction.CallbackContext context);
        void OnSwitching(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnKeyKokkurisan(InputAction.CallbackContext context);
        void OnButtonKokkurisan(InputAction.CallbackContext context);
    }
    public interface ITutorialActions
    {
        void OnDicision(InputAction.CallbackContext context);
    }
}
